trigger:
  branches:
    include:
      - streamlabs-25.0.8
  tags:
    include:
      - '*'

variables:
  InstallPath: packed_build
  CEF_VERSION: 4638
  CEF_MAC_BUILD_VERSION: 4638
  MACOS_DEPS_VERSION: 2022-02-13
  VLC_VERSION: 3.0.8
  MIN_MACOS_VERSION: 10.13

jobs:
- job: 'Windows64'
  pool: 'Default'
  workspace:
    clean: all
  strategy:
    matrix:
      Release:
        CefBuildConfig: Release
        BuildConfig: RelWithDebInfo
        ReleaseName: release
      Debug:
        CefBuildConfig: Debug
        BuildConfig: Debug
        ReleaseName: debug
  steps:
    - powershell: 'Write-Host "##vso[task.setvariable variable=tag]$((git.exe describe --tags --abbrev=0) | Out-String)"'
      displayName: 'Get tag for artifact'

    - script: git submodule update --init --recursive --jobs 2
      displayName: 'Checkout Submodules'

    - script: ./slobs_CI/install-script-win.cmd
      displayName: 'Configure / Build'

    - script: 'git clone https://github.com/stream-labs/symsrv-scripts.git'
      displayName: 'Fetch symsrv-scripts'
      condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

    - script: ./symsrv-scripts/main.bat "%CD%/symsrv-scripts" ".\main.ps1 -localSourceDir '%CD%' -repo_userId 'stream-labs' -repo_name 'obs-studio' -repo_branch '$(Build.SourceVersion)' -subModules 'plugins/mediasoup-connector,stream-labs,obs-amd-encoder,streamlabs;plugins/enc-amf,stream-labs,obs-amd-encoder,streamlabs;plugins/motion-effect,stream-labs,motion-effect,master;plugins/obs-browser,stream-labs,obs-browser,streamlabs;plugins/obs-ndi,stream-labs,obs-ndi,streamlabs;plugins/obs-ndi,stream-labs,obs-amd-encoder,streamlabs;plugins/obs-openvr,stream-labs,OBS-OpenVR-Input-Plugin,master;plugins/obs-vst,stream-labs,obs-vst,streamlabs;plugins/slobs-virtual-cam,stream-labs,slobs-virtual-cam,streamlabs;plugins/win-dshow/libdshowcapture,stream-labs,libdshowcapture,streamlabs'"
      displayName: 'Run symbol server scripts'
      condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))
      env:
        AWS_SYMB_ACCESS_KEY_ID: $(AWS_SYMB_ACCESS_KEY_ID)
        AWS_SYMB_SECRET_ACCESS_KEY: $(AWS_SYMB_SECRET_ACCESS_KEY)

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: $(InstallPath)
        includeRootFolder: true
        archiveType: 7z
        archiveFile: 'libobs-windows64-$(ReleaseName)-$(tag).7z'
      displayName: 'Generate artifact'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: libobs-windows64-$(ReleaseName)-$(tag).7z
        artifactName: libobs-$(ReleaseName)-$(BuildNumber).7z
      displayName: 'Publish artifact'

    - task: S3Upload@1
      inputs:
        awsCredentials: 'Streamlabs AWS'
        regionName: 'us-west-2'
        bucketName: 'obsstudios3.streamlabs.com'
        globExpressions: 'libobs-windows64-$(ReleaseName)-$(tag).7z'
        filesAcl: 'public-read'
      displayName: 'Upload artifact to S3'
      condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

- job: 'MacOX'
  pool:
    vmImage: 'macOS-11'

  strategy:
    matrix:
      Release:
        CefBuildConfig: Release
        BuildConfig: RelWithDebInfo
        ReleaseName: release
      Debug:
        CefBuildConfig: Debug
        BuildConfig: Debug
        ReleaseName: debug

  steps:
  - powershell: 'Write-Host "##vso[task.setvariable variable=tag]$((git describe --tags --abbrev=0) | Out-String)"'
    displayName: 'Get tag for artifact'

  - script: git submodule update --init --recursive --jobs 2
    displayName: 'Checkout Submodules'

  - script: ./slobs_CI/install-script-osx.sh
    displayName: 'Install Dependencies'

  - script: ./slobs_CI/build-script-osx.sh
    displayName: 'Configure / Build'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: $(InstallPath)
      includeRootFolder: true
      archiveType: 7z
      archiveFile: 'libobs-osx-$(ReleaseName)-$(tag).7z'
    displayName: 'Generate artifact'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: libobs-osx-$(ReleaseName)-$(tag).7z
      artifactName: libobs-$(ReleaseName)-$(BuildNumber).7z
    displayName: 'Publish artifact'

  - task: S3Upload@1
    inputs:
      awsCredentials: 'Streamlabs AWS'
      regionName: 'us-west-2'
      bucketName: 'obsstudios3.streamlabs.com'
      globExpressions: 'libobs-osx-$(ReleaseName)-$(tag).7z'
      filesAcl: 'public-read'
    displayName: 'Upload artifact to S3'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - script: 'python ./slobs_CI/sentry-osx.py'
    env:
      SENTRY_AUTH_TOKEN: $(sentryAuth)
    displayName: 'Upload debug files to Sentry'
